# 包名，当引入其他文件时要使用该包名，如果以插件的形式发布到pub.dev，就是他人引用的包名
# 全部小写，使用下划线分割单词，有效的Dart标识符
name: words_list_fav

# 包描述，英文
description: A new Flutter application.

# 项目主页，填写域名，非必填
# homepage: https://example-pet-store.com/newtify

# 开发文档位置，非必填
# 与`homepage`不同，若该项目还包含其他文档，可以将文档的地址添加到该节点下。如果项目托管在pub.dev，该节点显示项目的API信息
# documentation: https://example-pet-store.com/newtify/docs

# 防止包被意外发布到pub.dev，要发不到pub.dev删除该选项
publish_to: 'none'

# 程序版本号和内部版本号
# 版本号是由点分隔的三个数字，例如1.2.43
# 内部版本号是可选的，使用+分隔
version: 1.0.0+1

# 项目的远程库，非必填
# 若项目是lib或开源库，这个配置文件用于关联库的来源地址，最好填写有效的地址，否则会无法关联获取项目
# repository: https://github.com/<user>/<repository>

# 包依赖环境
# Flutter和Dart版本的控制
# sdk即Dart语言环境，某个Dart版本只会在某个flutter版本适用
environment:
  sdk: ">=2.7.0 <3.0.0"

# 可以将Dart2的可执行脚本引入到flutter之中，作为插件使用，但前提是这些脚本均可以在命令行正常调用。
#  executables:
#    <name-of-executable>: <Dart-script-from-bin>

# dependencies下的所有依赖都会编译到项目中
# 第三方插件，生产环境依赖
dependencies:
# -------------- 插件 --------------
  # 1、直接写依赖包名，如果保存在pub.dev上，运行flutter packages get会下载库的最新版本
  # transmogrify:

  # 2、约束插件的版本号，需要使用1.0.1版本
  # transmogrify: ^1.0.1

  # 3、如果插件未部署到pub.dev上，是用url来指定来源
  # transmogrify:
  #   hosted:
  #     name: transmogrify
  #     url: http://some-package-server.com
  #   version: ^1.0.1

  # 4、如果插件发布在Git上
  # transmogrify:
  #   git:
  #     # git地址
  #     url: git://github.com/transmogrify/transmogrify.git
  #     # 分支信息，默认为master分支，通过ref指定分支
  #     ref: branch
  #     # 如果插件在某个项目的某个目录中，通过path指定位置
  #     path: path/to/transmogrify

  # 5、如果插件在本地，通过path来指定插件位置
  # transmogrify:
  #   path: ../plugin/transmogrify

# ---------------- 插件版本 --------------
  # 指定为某一版本
  # transmogrify: ^1.4.0
  # 指定最低版本
  # transmogrify: ">=1.2.3"
  # 指定版本区间
  # transmogrify: ">=2.0.0 <3.0.0"
  # 指定最高版本
  # transmogrify: "<1.2.3"

  # 指定flutter SDK
  flutter:
    sdk: flutter

  # iOS风格的图标
  cupertino_icons: ^1.0.2
  english_words: any

# 重写包依赖，强制下载对应的包，对对应的包重写
# dependency_overrides:

# 开发环境依赖插件，仅在开发调试时引入，规则同dependencies
dev_dependencies:
  flutter_test:
    sdk: flutter

# -------------- flutter项目配置 ----------------
# 项目中配置声明方式
# 用于在项目中添加资源、设置字体、配置插件参数等
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # 添加资源，静态数据、配置文件、图标图片、字体等
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # 设置字体样式，通过family设置字体分组
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # 定义常量
#  age: 22
#  name: 'miaokii'
#
#  # 定义数组
#  server:
#    - a
#    - b
#    - c
